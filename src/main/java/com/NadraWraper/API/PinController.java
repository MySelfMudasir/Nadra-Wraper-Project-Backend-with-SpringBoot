package com.NadraWraper.API;

import com.NadraWraper.Model.ApiResponse;
import com.NadraWraper.Model.DTO.UserRegistrationDto;
import com.NadraWraper.Service.ConsumerPinCreation;
import com.NadraWraper.Service.ResponseCode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

@RestController
@RequestMapping("/api/consumer")

public class PinController {

    @Autowired
private ConsumerPinCreation consumerPinCreation;


@PostMapping("/generatePin")
    public String generatePin(@RequestBody Map<String, String> request) {
        String cnic = request.get("userId");
        return consumerPinCreation.saveAutoGeneratedPin(cnic);
    }
    @PostMapping("/getPin")
    public String getPin(@RequestBody Map<String, String> request) {
        String cnic = request.get("userId");
        return consumerPinCreation.getPin(cnic);
    }

    @PostMapping("/generateOtp")
    public ApiResponse generateOtp(@RequestBody UserRegistrationDto userRegistrationDto) {
        ApiResponse apiResponse = new ApiResponse();
        try {
            log.info("regOtp Request : " + mapper.writeValueAsString(userRegistrationDto));
            apiResponse = consumerPinCreation.generateOTP(userRegistrationDto);
            log.info("regOtp Response : " + mapper.writeValueAsString(apiResponse));
        }
        catch (Exception e) {
            apiResponse.setResponseCode(ResponseCode.FAILURE);
            apiResponse.setResponseMessage("Exception occured while generating user registration otp");
            log.error("Exception occured while generating user registration otp");
            e.printStackTrace();
        }
        return apiResponse;
    }
    @PostMapping("/verifyotp")
    public ResponseEntity<ApiResponse> verifyOtp(@RequestBody UserRegistrationDto dto) throws Exception {
        ApiResponse response = consumerPinCreation.verifyOtp(dto.getCnic(), dto.getOtp());
        return ResponseEntity.ok(response);
    }



    @Autowired
    private ObjectMapper mapper;
    private final static Logger log = Logger.getLogger(PinController.class);
}
